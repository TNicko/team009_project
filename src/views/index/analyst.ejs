<!-- Front end home page for analyst users -->

<%- include('../partials/navbar.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function getRandomRGB(){
        var num = Math.round(0xffffff * Math.random());
        var r = num >> 16;
        var g = num >> 8 & 255;
        var b = num & 255;
        return 'rgb(' + r + ', ' + g + ', ' + b + ')';
    }

        document.addEventListener('DOMContentLoaded', function(){
        const ctx = document.getElementById('firstGraph').getContext('2d');

        const barGraph = document.getElementById('commonSoftware').getContext('2d');
        
        let use = <%- JSON.stringify(users) %>;
        let names = [];
        let count = <%- JSON.stringify(counted) %>;
        let counter = [];
        let backgroundColor = [];
        use.forEach(function(user){
            names.push(user.name);
            counter.push(count[user.name]);
            var color = getRandomRGB();
            while(backgroundColor.find(element => element > color))
            {
                color = getRandomRGB();
            }

            backgroundColor.push(color);
        })

        
        
        let assignedTicketsPerSpecialist = {
            labels: names,
            datasets: [{
                label: 'Number of assigned tickets per specialist',
                data: counter,
                backgroundColor: backgroundColor,
                hoverOffset: 4,
            }]
        }
        const assTickPerSpec = new Chart(ctx, {
            type: 'pie',
            data: assignedTicketsPerSpecialist,
            options: {
                responsive: true,
                plugins:{
                    legend:{
                        position: 'top',
                        labels:{
                            font:{
                                size: 15
                            }
                        }
                    }
                }
            }
        })

        let softwareList = <%- JSON.stringify(pureSoftwareList) %>;
        let countPerSoftware = <%- JSON.stringify(softwareCount) %>;
        let softwareCount = [];
        let softwareBackground = [];
        softwareList.forEach(function(software){
            softwareCount.push(countPerSoftware[software])
            var color = getRandomRGB();
            while(softwareBackground.find(element => element > color))
            {
                color = getRandomRGB();
            }

            softwareBackground.push(color);
        })
        commonSoftData = {
            labels: softwareList,
            datasets: [{
                label: 'Commonly Reported Software',
                data: softwareCount,
                backgroundColor: softwareBackground,
                borderWidth: 1
            }]
        }
        const commonSoft = new Chart(barGraph, {
            type: 'bar',
            data: commonSoftData,
            options: {
                responsive: true,
                scales: {
                    x: {
                        ticks: {
                            font: {
                                size: 10
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks:{
                            stepSize: 1
                        }
                    }
                    
                },
                plugins:{
                    legend:{
                        display: false,
                        position: 'top',
                        labels:{
                            font:{
                                size: 20
                            }
                        }
                    }
                }
            }
        })


        let osList = <%- JSON.stringify(osList) %>;
        let countPerOs = <%- JSON.stringify(osCount) %>;
        let osCount = [];
        let osBackground = [];
        osList.forEach(function(os){
            osCount.push(countPerOs[os]);
            var color = getRandomRGB();
            while(osBackground.find(element => element > color))
            {
                color = getRandomRGB();
            }

            osBackground.push(color);
        })

        reportOs = {
            labels: osList,
            datasets: [{
                label: 'Reported Os',
                data: osCount,
                backgroundColor: osBackground,
                borderWidth: 1
            }]
        }

        const barOs = document.getElementById('reportOsBar').getContext('2d');
        const commonReportedOs = new Chart(barOs, {
            type: 'bar',
            data: reportOs,
            options: {
                responsive: true,
                scales: {
                    x: {
                        ticks: {
                            font: {
                                size: 10
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks:{
                            stepSize: 1
                        }
                    }
                    
                },
                plugins:{
                    legend:{
                        display: false,
                        position: 'top',
                        labels:{
                            font:{
                                size: 15
                            }
                        }
                    }
                }
            }
        })

        let statusList = <%- JSON.stringify(statuses) %>;
        let countPerStatus = <%- JSON.stringify(statusCount) %>;
        let statusCount = [];
        let statusBackground = ["rgb(115, 115, 115)", "rgb(204, 153, 255)", "rgb(0, 230, 0)", "rgb(230, 0, 0)"];
        
        statusList.forEach(function(status){
            statusCount.push(countPerStatus[status]);
        })

        statusData = {
            labels: statusList,
            datasets: [{
                label: 'status',
                data: statusCount,
                backgroundColor: statusBackground,
                hoverOffset: 4
            }]
        }
        const statusDo = document.getElementById('statusDough').getContext('2d');
        const doghnutStatus = new Chart(statusDo,{
            type: 'doughnut',
            data: statusData,
        })

        let problemTypes = <%- JSON.stringify(problemTypes) %>;
        let totalCounts = <%- JSON.stringify(totalCounts) %>;
        let totalCountsTypes = [];
        problemTypes.forEach(function(type){
            totalCountsTypes.push(totalCounts[type]);
        })

        let horiData = {
            labels: problemTypes,
            datasets: [
                {

                    data: totalCountsTypes,
                    borderColor: "rgb(255, 102, 102)",
                    backgroundColor: "rgb(255, 128, 128)",

                }
            ]
        }

        const horiBarProblem = document.getElementById('horiBarType').getContext('2d');

        const horiBarTypeG = new Chart(horiBarProblem,{
            type: 'bar',
            data: horiData,
            options: {
                maintainAspectRatio: false,
                indexAxis: 'y',
                elements: {
                    bar: {
                        borderWidth: 2,
                    }
                },
                responsive: true,
                plugins: {
                    legend: {
                        display: false,
                        position: 'right',
                    },
                    title: {
                        display: false,
                        text: 'Problem Per Problem Type'
                    }
                }
            }
        })

    })
</script>

<div class="main_section" style="height:86%;">
    <div class="main_container" style="height: 100%;">
        
        <div class="table_section" style="height: 100%; overflow: hidden;">
            <div class="table_top">
                <div class="table_title_container">
                    <h1 class="graph_title">Statistics</h1>
                </div>
            </div>
            <div class="grid">
                <div class="NoAssinedTickets graphs">
                    <div><h5 class="graph_title">Assigned Tickets Per Specialist</h5></div>
                    <canvas id="firstGraph" class="graphCanvas"></canvas>
                </div>
                
                <div class="commonSoftBar graphs">
                    <div><h5 class="graph_title">Commonly Reported Software</h5></div>
                    <canvas id="commonSoftware" class="barChart"></canvas>
                </div>
                <div class="reportedOs graphs">
                    <div><h5 class="graph_title">Reported OS</h5></div>
                    <canvas id="reportOsBar" class="barChart"></canvas>
                </div>
                <div class="status graphs">
                    <div>
                        <h5 class="graph_title">Status</h5>
                    </div>
                    <canvas id="statusDough" class="graphCanvas"></canvas>
                </div>
                <div class="problemPerType graphs">
                    <div><h5 class="graph_title">Problem Per Problem Type</h5></div>
                    <canvas class="horiBar" id="horiBarType"></canvas>
                </div>
            </div>
        </div>
        
    </div>
</div>